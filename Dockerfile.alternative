# Alternative Dockerfile with automatic version detection
FROM nvidia/cuda:12.4.1-devel-ubuntu22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.12 \
    python3.12-venv \
    python3.12-dev \
    python3-pip \
    git \
    wget \
    curl \
    nginx \
    supervisor \
    build-essential \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set up Python alternatives
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV COMFYUI_PORT=8188
ENV COMFYUI_VERSION=v0.3.47

# Create workspace
WORKDIR /workspace
RUN mkdir -p /workspace/logs

# Install ComfyUI
RUN git clone --branch ${COMFYUI_VERSION} https://github.com/comfyanonymous/ComfyUI.git /workspace/ComfyUI

# Create virtual environment and install dependencies with version detection
WORKDIR /workspace/ComfyUI
RUN python -m venv venv

# Copy requirements installation script
COPY install_requirements.sh /tmp/install_requirements.sh
RUN chmod +x /tmp/install_requirements.sh && /tmp/install_requirements.sh

# Copy configuration files
COPY nginx.conf /etc/nginx/nginx.conf
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY start.sh /start.sh
RUN chmod +x /start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${COMFYUI_PORT}/ || exit 1

# Expose ports
EXPOSE ${COMFYUI_PORT} 80

# Start services
CMD ["/start.sh"]